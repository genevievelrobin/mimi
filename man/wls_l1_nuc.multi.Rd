% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rwls_l1_nuc.multi.R
\name{wls_l1_nuc.multi}
\alias{wls_l1_nuc.multi}
\title{wls_l1_nuc.multi}
\usage{
wls_l1_nuc.multi(y, groups, lambda1, lambda2, weights = NULL,
  thresh = 1e-05, maxit = 1000, mu0 = NULL, alpha0 = NULL,
  theta0 = NULL, trace.it = F, offset = F, max.rank = 5)
}
\arguments{
\item{y}{observation matrix}

\item{groups}{factor indicating group memberships, if vector will be treated as a factor}

\item{lambda1}{positive number, value of the nuclear norm regularization parameter}

\item{lambda2}{positive number, value of the l1 norm regularization parameter}

\item{weights}{nxp matrix of weights in (0,1)}

\item{thresh}{positive number, convergence criterion}

\item{maxit}{integer, maximum number of iterations}

\item{mu0}{real number, initial value of the offset, default 0}

\item{alpha0}{matrix of size (nb of groups)x(number of variables), initial value of the group effect, default 0}

\item{theta0}{matrix of size (nb of ind.)x(number of variables), initial value of the individual effect, default 0}

\item{trace.it}{boolean, if TRUE information about convergence will be displayes, default FALSE}

\item{offset}{boolean, whether an offset should be fitted}

\item{max.rank}{integer, maximum rank of interaction matrix theta}
}
\value{
A list with the following elements
\item{y}{the original data matrix}
\item{y.imputed}{the original data matrix where missing entries are imputed by their estimated means}
\item{param}{the estimated parameter matrix}
\item{mu}{the offset}
\item{alpha}{a (nb groups) x (nb variables) matrix containing the group effects}
\item{theta a}{(nb individuals) x (nb variables) matrix containing the individual effects}
\item{objective}{a vector containing the value of the objective function at every iteration}
}
\description{
wls_l1_nuc.multi
}
\examples{
y0 <- matrix(rnorm(6 * 10), nrow = 6)
y0[sample(1:50, size = 10)] <- NA
groups <- c(1,1,2,2,3,3)
groups <- as.factor(groups)
res <- wls_l1_nuc.multi(y0, groups, lambda1 = 0.1, lambda2 = 0.2)
}
