% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mimi.R
\name{mimi.multi}
\alias{mimi.multi}
\title{mimi.multi
Compute solution of mimi with group effects along regularization path}
\usage{
mimi.multi(y, groups, var.type = c("gaussian", "binary", "categorical",
  "poisson"), lambda1, lambda2, maxit = 100, mu0 = NULL,
  alpha0 = NULL, theta0 = NULL, thresh = 1e-05, trace.it = F,
  offset = T, scale = T, max.rank = 5)
}
\arguments{
\item{y}{nxp observation matrix}

\item{groups}{factor of length n indicating group memberships}

\item{var.type}{vector of length p indicating types of y columns (gaussian, binary, poisson)}

\item{lambda1}{positive number, regularization parameter for nuclear norm penalty}

\item{lambda2}{positive number, regularization parameter for l1 norm penalty}

\item{maxit}{integer, maximum number of iterations}

\item{mu0}{real number initial offset (optional)}

\item{alpha0}{matrix of size Nxp (N nb of groups) initial group effects (optional)}

\item{theta0}{matrix of size nxp, initial interactions (optional)}

\item{thresh}{positive number, convergence criterion}

\item{trace.it}{boolean, whether convergence information should be printed}

\item{offset}{boolean, whether or not an offset should be fitted, default FALSE}

\item{scale}{boolean indicating whether or not the column loss functions should be scaled}

\item{max.rank}{integer, maximum rank of interaction matrix}
}
\value{
A list with the following elements
\item{yimputed}{imputed data set}
\item{param}{estimated parameter matrix}
\item{mu}{estimated offset}
\item{alpha}{estimated matrix of group effects}
\item{theta}{estimated interaction matrix}
}
\description{
mimi.multi
Compute solution of mimi with group effects along regularization path
}
\examples{
param <- matrix(rnorm(6 * 10), nrow = 6)
groups <- c(1,1,2,2,3,3)
groups <- as.factor(groups)
param[groups==1, 1] <- 2
param[groups==2, 2] <- 2
y <- matrix(rnorm(6*10,c(param)), nrow=6)
var.type <- rep("gaussian", 10)
res <- mimi.multi(y, groups, var.type, lambda1 = 1, lambda2 = 2, thresh=0.1)
}
